数据过滤通配符
%通配符

%:表示任何字符出现任意次数

LIKE  '惠普%' :以'惠普'开头
 LIKE  '%惠普' :以'惠普'结尾
 LIKE '%惠普%'：包含'惠普'
 LIKE 's%e':以s开头，e结尾
注意：

1.除了一个或多个字符外，%还能匹配0个字符。
2.尾空格可能会干扰通配符匹配，如：保存great时，如果它后面有一个或多个空格，
则%great将不会匹配它们，因为后面有多余的字符(空格)，解决办法就是使用双%，
%great%,一个更好的办法是使用函数去掉首尾空格。
3.%不能匹配NULL.

_通配符
下划线通配符与%相同，但是它只匹配单个字符而非多个。

SELECT * FROM a WHERE name LIKE '_ood'  #good
SELECT * FROM a WHERE name LIKE 'goo_'  #good
SELECT * FROM a WHERE name LIKE 'go_d'  #good
优化：
通配符在搜索处理上比其他的要慢些，所以要记住以下技巧：

1.不要过度使用通配符
2.不要把它们用在搜索模式的开始处，如若不然，搜索起来会很慢的。
3.仔细注意通配符的位置，切勿放错。

四、使用正则表达式
本小节学习如何在Where子句中使用正则表达式来更好的控制数据过滤。
更多详细知识参考《正则表达式必知必会》
1.基本字符的匹配

SELECT * FROM a1 WHERE name regexp '1000'  #匹配名称含有1000的所有行
SELECT * FROM a1 WHERE name regexp '.000'  #匹配以000结尾的所有行，(.正则中表示：匹配任意一个字符)
从中可以看到正则表达式能够模拟LIKE使用通配符，注意：在通配符能完成的时候就不用正则，因为正则可能慢点，
当然正则也能简化通配符，完成更大的作用。所以要有所取舍。

LIKE与REGEXP的区别：

 SELECT * FROM a1 WHERE name LIKE 'a'
 SELECT * FROM a1 WHERE name regexp 'a' 
下面两条语句第一条不返回数据，第二条返回数据。
原因如下：

LIKE匹配整个列值时，不会找到它，相应的行也不会被返回（除非使用通配符）
REGEXP匹配时，会自动查找并返回结果。
那么REGEXP也能匹配整个列值，使用^和$定位符即可